/*
 * Generated by the Mule project wizard. http://mule.mulesource.org
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */
package org.mule.transport.comm;

import org.mule.api.endpoint.ImmutableEndpoint;
import org.mule.transport.tcp.TcpConnector;

import javax.comm.CommPortIdentifier;
import java.net.InetSocketAddress;
import java.net.InetAddress;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Enumeration;

/**
 * Created by IntelliJ IDEA.
 * User: Christopher Cheng
 * Date: Mar 1, 2009
 * Time: 2:36:19 PM
 * To change this template use File | Settings | File Templates.
 *
 * comm://<port_number>[;<param>=<value>;<param>=<value>...]
 * 
 */
public class CommPortKey {

//    private InetSocketAddress address;
    private String port;

    private ImmutableEndpoint endpoint;

    public CommPortKey(ImmutableEndpoint endpoint) throws URISyntaxException
    {
        if (!(endpoint.getConnector() instanceof CommConnector))
        {
            throw new IllegalArgumentException("Ports must be keyed via a Comm endpoint");
        }
        this.endpoint = endpoint;

        URI uri = new URI(endpoint.getEndpointURI().getAddress());

        String portName = "";
        Enumeration portList = CommPortIdentifier.getPortIdentifiers();
        while(portList.hasMoreElements()) {
            CommPortIdentifier portId = (CommPortIdentifier)portList.nextElement();
            if (portId.getPortType() == CommPortIdentifier.PORT_SERIAL) {
                if (portId.getName().endsWith(String.valueOf(uri.getPort()))) {
                    portName = portId.getName();
                }
            }
        }

//        address = new InetSocketAddress(
//                endpoint.getEndpointURI().getHost(),
//                endpoint.getEndpointURI().getPort());

        port = portName;
    }

    public boolean equals(Object obj)
    {
        return obj instanceof CommPortKey && port.equals(((CommPortKey) obj).port);
    }

    public int hashCode()
    {
        return port.hashCode();
    }

    public ImmutableEndpoint getEndpoint()
    {
        return endpoint;
    }

    public CommConnector getConnector()
    {
        return (CommConnector) endpoint.getConnector();
    }

//    public InetAddress getInetAddress()
//    {
//        return address.getAddress();
//    }

//    public int getPort()
//    {
//        return address.getPort();
//    }

    public String getPort() {
        return port;
    }

    public String toString()
    {
        return getPort();
    }
}
