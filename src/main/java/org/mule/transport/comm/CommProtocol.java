/*
 * Generated by the Mule project wizard. http://mule.mulesource.org
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */
package org.mule.transport.comm;

import org.mule.ResponseOutputStream;

import javax.comm.CommPort;
import java.io.InputStream;
import java.io.IOException;
import java.io.OutputStream;

/**
 * Created by IntelliJ IDEA.
 * User: Christopher Cheng
 * Date: Mar 1, 2009
 * Time: 2:21:25 PM
 * To change this template use File | Settings | File Templates.
 */
public interface CommProtocol {

    /**
     * Reads the input stream and returns a whole message.
     *
     * @param is the input stream
     * @return an array of byte containing a full message
     * @throws java.io.IOException if an exception occurs
     */
    Object read(InputStream is) throws IOException;

    /**
     * Write the specified message to the output stream.
     *
     * @param os the output stream to write to
     * @param data the data to write
     * @throws IOException if an exception occurs
     */
    void write(OutputStream os, Object data) throws IOException;

    /**
     * This lets protocols encode a response stream.  If the protocol does not support a
     * response stream (ie does not support streaming) then the stream should thrown an
     * exception when used.
     *
     * @param commPort
     *  The destination to write to
     * @return A stream whose output will be encoded
     * @throws IOException
     */
    ResponseOutputStream createResponse(CommPort commPort) throws IOException;
}
